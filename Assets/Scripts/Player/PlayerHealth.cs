using UnityEngine;
using UnityEngine.UI;
using System.Collections;
using UnityEngine.SceneManagement;

namespace Scripts.Player
{
    public class PlayerHealth : MonoBehaviour
    {
        public float maxHealth = 100;                                   // Maximum health for the player.
        public float startingHealth = 100;                              // The amount of health the player starts the game with.
        public float healthRegeneration = 2;                            // Health regenerated by second when the player is not losing health.
        public float currentHealth;                                     // The current health the player has.
        public Slider healthSlider;                                     // Reference to the UI's health bar.                
               
        bool isDead;                                                    // Whether the player is dead.
        bool damaged;                                                   // True when the player gets damaged.
        bool possessing;                                                 // True when the player posses another character.


        void Awake ()
        {     
            // Set the initial health of the player.
            currentHealth = startingHealth;

            // Start coroutine to regenerate player's health
            StartCoroutine(RenerateHealth());
        }

        IEnumerator RenerateHealth() {
            while (true) {
                if (currentHealth < maxHealth)
                {
                    //Debug.Log("Previous health: " + currentHealth.ToString() + "; new health: " + (currentHealth + healthRegeneration).ToString());
                    // Regenerate health
                    currentHealth += healthRegeneration;

                    // Check to regenerate only to the maximum posible health
                    if (currentHealth > maxHealth)
                    {
                        currentHealth = maxHealth;
                    }

                    //Show new health value
                    UpdateHealth();

                    //Wait for more health
                    yield return new WaitForSeconds(1);
                }
                else {
                    // Maximum health, do nothing
                    yield return null;
                }
            }
        }

        void Update ()
        {
            // If the player has just been damaged...
            if(damaged || possessing)
            {
                // loses health
            }
        }


        public void TakeDamage (int amount)
        {
            // Set the damaged flag so the screen will flash.
            damaged = true;

            // Reduce the current health by the damage amount.
            currentHealth -= amount;                        
        }


        private void UpdateHealth() {
            // Set the health bar's value to the current health.
            healthSlider.value = currentHealth;

            // If the player has lost all it's health and the death flag hasn't been set yet...
            if (currentHealth <= 0 && !isDead)
            {
                // ... it should die.
                Death();
            }
        }

        void Death ()
        {

        }


        public void RestartLevel ()
        {
            // Reload the level that is currently loaded.
            SceneManager.LoadScene (0);
        }
    }
}